// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package datawidgets.proxies;

public enum Filter_Operators
{
	contains(new java.lang.String[][] { new java.lang.String[] { "en_US", "Contains" }, new java.lang.String[] { "de_DE", "Contains" } }),
	startsWith(new java.lang.String[][] { new java.lang.String[] { "en_US", "Starts with" }, new java.lang.String[] { "de_DE", "Starts with" } }),
	endsWith(new java.lang.String[][] { new java.lang.String[] { "en_US", "Ends with" }, new java.lang.String[] { "de_DE", "Ends with" } }),
	between(new java.lang.String[][] { new java.lang.String[] { "en_US", "Between" }, new java.lang.String[] { "de_DE", "Between" } }),
	greater(new java.lang.String[][] { new java.lang.String[] { "en_US", "Greater than" }, new java.lang.String[] { "de_DE", "Greater than" } }),
	greaterEqual(new java.lang.String[][] { new java.lang.String[] { "en_US", "Greater than or equal" }, new java.lang.String[] { "de_DE", "Greater than or equal" } }),
	equal(new java.lang.String[][] { new java.lang.String[] { "en_US", "Equal" }, new java.lang.String[] { "de_DE", "Equal" } }),
	notEqual(new java.lang.String[][] { new java.lang.String[] { "en_US", "Not equal" }, new java.lang.String[] { "de_DE", "Not equal" } }),
	smaller(new java.lang.String[][] { new java.lang.String[] { "en_US", "Smaller than" }, new java.lang.String[] { "de_DE", "Smaller than" } }),
	smallerEqual(new java.lang.String[][] { new java.lang.String[] { "en_US", "Smaller than or equal" }, new java.lang.String[] { "de_DE", "Smaller than or equal" } }),
	empty(new java.lang.String[][] { new java.lang.String[] { "en_US", "Empty" }, new java.lang.String[] { "de_DE", "Empty" } }),
	notEmpty(new java.lang.String[][] { new java.lang.String[] { "en_US", "Not empty" }, new java.lang.String[] { "de_DE", "Not empty" } });

	private final java.util.Map<java.lang.String, java.lang.String> captions;

	private Filter_Operators(java.lang.String[][] captionStrings)
	{
		this.captions = new java.util.HashMap<>();
		for (java.lang.String[] captionString : captionStrings) {
			captions.put(captionString[0], captionString[1]);
		}
	}

	public java.lang.String getCaption(java.lang.String languageCode)
	{
		return captions.getOrDefault(languageCode, "de_DE");
	}

	public java.lang.String getCaption()
	{
		return captions.get("de_DE");
	}
}
