// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package fels.proxies;

public class Bemerkung implements com.mendix.systemwideinterfaces.core.IEntityProxy
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject bemerkungMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Fels.Bemerkung";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Beschreibung("Beschreibung"),
		Farbe("Farbe"),
		Bemerkung_Leistungsbereich("Fels.Bemerkung_Leistungsbereich"),
		Bemerkung_Auftrag("Fels.Bemerkung_Auftrag");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Bemerkung(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected Bemerkung(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject bemerkungMendixObject)
	{
		if (bemerkungMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, bemerkungMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.bemerkungMendixObject = bemerkungMendixObject;
		this.context = context;
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static fels.proxies.Bemerkung initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new fels.proxies.Bemerkung(context, mendixObject);
	}

	public static fels.proxies.Bemerkung load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return fels.proxies.Bemerkung.initialize(context, mendixObject);
	}

	public static java.util.List<fels.proxies.Bemerkung> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> fels.proxies.Bemerkung.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * @return value of Beschreibung
	 */
	public final java.lang.String getBeschreibung()
	{
		return getBeschreibung(getContext());
	}

	/**
	 * @param context
	 * @return value of Beschreibung
	 */
	public final java.lang.String getBeschreibung(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Beschreibung.toString());
	}

	/**
	 * Set value of Beschreibung
	 * @param beschreibung
	 */
	public final void setBeschreibung(java.lang.String beschreibung)
	{
		setBeschreibung(getContext(), beschreibung);
	}

	/**
	 * Set value of Beschreibung
	 * @param context
	 * @param beschreibung
	 */
	public final void setBeschreibung(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String beschreibung)
	{
		getMendixObject().setValue(context, MemberNames.Beschreibung.toString(), beschreibung);
	}

	/**
	 * @return value of Farbe
	 */
	public final java.lang.String getFarbe()
	{
		return getFarbe(getContext());
	}

	/**
	 * @param context
	 * @return value of Farbe
	 */
	public final java.lang.String getFarbe(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Farbe.toString());
	}

	/**
	 * Set value of Farbe
	 * @param farbe
	 */
	public final void setFarbe(java.lang.String farbe)
	{
		setFarbe(getContext(), farbe);
	}

	/**
	 * Set value of Farbe
	 * @param context
	 * @param farbe
	 */
	public final void setFarbe(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String farbe)
	{
		getMendixObject().setValue(context, MemberNames.Farbe.toString(), farbe);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Bemerkung_Leistungsbereich
	 */
	public final fels.proxies.Leistungsbereich getBemerkung_Leistungsbereich() throws com.mendix.core.CoreException
	{
		return getBemerkung_Leistungsbereich(getContext());
	}

	/**
	 * @param context
	 * @return value of Bemerkung_Leistungsbereich
	 * @throws com.mendix.core.CoreException
	 */
	public final fels.proxies.Leistungsbereich getBemerkung_Leistungsbereich(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		fels.proxies.Leistungsbereich result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Bemerkung_Leistungsbereich.toString());
		if (identifier != null) {
			result = fels.proxies.Leistungsbereich.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of Bemerkung_Leistungsbereich
	 * @param bemerkung_leistungsbereich
	 */
	public final void setBemerkung_Leistungsbereich(fels.proxies.Leistungsbereich bemerkung_leistungsbereich)
	{
		setBemerkung_Leistungsbereich(getContext(), bemerkung_leistungsbereich);
	}

	/**
	 * Set value of Bemerkung_Leistungsbereich
	 * @param context
	 * @param bemerkung_leistungsbereich
	 */
	public final void setBemerkung_Leistungsbereich(com.mendix.systemwideinterfaces.core.IContext context, fels.proxies.Leistungsbereich bemerkung_leistungsbereich)
	{
		if (bemerkung_leistungsbereich == null) {
			getMendixObject().setValue(context, MemberNames.Bemerkung_Leistungsbereich.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.Bemerkung_Leistungsbereich.toString(), bemerkung_leistungsbereich.getMendixObject().getId());
		}
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Bemerkung_Auftrag
	 */
	public final fels.proxies.Auftrag getBemerkung_Auftrag() throws com.mendix.core.CoreException
	{
		return getBemerkung_Auftrag(getContext());
	}

	/**
	 * @param context
	 * @return value of Bemerkung_Auftrag
	 * @throws com.mendix.core.CoreException
	 */
	public final fels.proxies.Auftrag getBemerkung_Auftrag(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		fels.proxies.Auftrag result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Bemerkung_Auftrag.toString());
		if (identifier != null) {
			result = fels.proxies.Auftrag.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of Bemerkung_Auftrag
	 * @param bemerkung_auftrag
	 */
	public final void setBemerkung_Auftrag(fels.proxies.Auftrag bemerkung_auftrag)
	{
		setBemerkung_Auftrag(getContext(), bemerkung_auftrag);
	}

	/**
	 * Set value of Bemerkung_Auftrag
	 * @param context
	 * @param bemerkung_auftrag
	 */
	public final void setBemerkung_Auftrag(com.mendix.systemwideinterfaces.core.IContext context, fels.proxies.Auftrag bemerkung_auftrag)
	{
		if (bemerkung_auftrag == null) {
			getMendixObject().setValue(context, MemberNames.Bemerkung_Auftrag.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.Bemerkung_Auftrag.toString(), bemerkung_auftrag.getMendixObject().getId());
		}
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return bemerkungMendixObject;
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final fels.proxies.Bemerkung that = (fels.proxies.Bemerkung) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
