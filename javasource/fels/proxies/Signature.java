// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package fels.proxies;

public class Signature extends system.proxies.Image
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Fels.Signature";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		_hasSiganture("_hasSiganture"),
		SigType("SigType"),
		Signed("Signed"),
		PublicThumbnailPath("PublicThumbnailPath"),
		EnableCaching("EnableCaching"),
		FileID("FileID"),
		Name("Name"),
		DeleteAfterDownload("DeleteAfterDownload"),
		Contents("Contents"),
		HasContents("HasContents"),
		Size("Size"),
		Signature_Einsatz("Fels.Signature_Einsatz");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Signature(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected Signature(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject signatureMendixObject)
	{
		super(context, signatureMendixObject);
		if (!com.mendix.core.Core.isSubClassOf(entityName, signatureMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static fels.proxies.Signature initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new fels.proxies.Signature(context, mendixObject);
	}

	public static fels.proxies.Signature load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return fels.proxies.Signature.initialize(context, mendixObject);
	}

	public static java.util.List<fels.proxies.Signature> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> fels.proxies.Signature.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * @return value of _hasSiganture
	 */
	public final java.lang.Boolean get_hasSiganture()
	{
		return get_hasSiganture(getContext());
	}

	/**
	 * @param context
	 * @return value of _hasSiganture
	 */
	public final java.lang.Boolean get_hasSiganture(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames._hasSiganture.toString());
	}

	/**
	 * Set value of _hasSiganture
	 * @param _hassiganture
	 */
	public final void set_hasSiganture(java.lang.Boolean _hassiganture)
	{
		set_hasSiganture(getContext(), _hassiganture);
	}

	/**
	 * Set value of _hasSiganture
	 * @param context
	 * @param _hassiganture
	 */
	public final void set_hasSiganture(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean _hassiganture)
	{
		getMendixObject().setValue(context, MemberNames._hasSiganture.toString(), _hassiganture);
	}

	/**
	 * Get value of SigType
	 * @param sigtype
	 */
	public final fels.proxies.ENUM_Signature_SigType getSigType()
	{
		return getSigType(getContext());
	}

	/**
	 * @param context
	 * @return value of SigType
	 */
	public final fels.proxies.ENUM_Signature_SigType getSigType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.SigType.toString());
		if (obj == null) {
			return null;
		}
		return fels.proxies.ENUM_Signature_SigType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of SigType
	 * @param sigtype
	 */
	public final void setSigType(fels.proxies.ENUM_Signature_SigType sigtype)
	{
		setSigType(getContext(), sigtype);
	}

	/**
	 * Set value of SigType
	 * @param context
	 * @param sigtype
	 */
	public final void setSigType(com.mendix.systemwideinterfaces.core.IContext context, fels.proxies.ENUM_Signature_SigType sigtype)
	{
		if (sigtype != null) {
			getMendixObject().setValue(context, MemberNames.SigType.toString(), sigtype.toString());
		} else {
			getMendixObject().setValue(context, MemberNames.SigType.toString(), null);
		}
	}

	/**
	 * @return value of Signed
	 */
	public final java.util.Date getSigned()
	{
		return getSigned(getContext());
	}

	/**
	 * @param context
	 * @return value of Signed
	 */
	public final java.util.Date getSigned(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.Signed.toString());
	}

	/**
	 * Set value of Signed
	 * @param signed
	 */
	public final void setSigned(java.util.Date signed)
	{
		setSigned(getContext(), signed);
	}

	/**
	 * Set value of Signed
	 * @param context
	 * @param signed
	 */
	public final void setSigned(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date signed)
	{
		getMendixObject().setValue(context, MemberNames.Signed.toString(), signed);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Signature_Einsatz
	 */
	public final fels.proxies.Einsatz getSignature_Einsatz() throws com.mendix.core.CoreException
	{
		return getSignature_Einsatz(getContext());
	}

	/**
	 * @param context
	 * @return value of Signature_Einsatz
	 * @throws com.mendix.core.CoreException
	 */
	public final fels.proxies.Einsatz getSignature_Einsatz(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		fels.proxies.Einsatz result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Signature_Einsatz.toString());
		if (identifier != null) {
			result = fels.proxies.Einsatz.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of Signature_Einsatz
	 * @param signature_einsatz
	 */
	public final void setSignature_Einsatz(fels.proxies.Einsatz signature_einsatz)
	{
		setSignature_Einsatz(getContext(), signature_einsatz);
	}

	/**
	 * Set value of Signature_Einsatz
	 * @param context
	 * @param signature_einsatz
	 */
	public final void setSignature_Einsatz(com.mendix.systemwideinterfaces.core.IContext context, fels.proxies.Einsatz signature_einsatz)
	{
		if (signature_einsatz == null) {
			getMendixObject().setValue(context, MemberNames.Signature_Einsatz.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.Signature_Einsatz.toString(), signature_einsatz.getMendixObject().getId());
		}
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final fels.proxies.Signature that = (fels.proxies.Signature) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
